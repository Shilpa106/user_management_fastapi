"""subgroup

Revision ID: 56bc8b4be8a7
Revises: f187c2540a57
Create Date: 2021-05-02 14:44:09.347157

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '56bc8b4be8a7'
down_revision = 'f187c2540a57'
branch_labels = None
depends_on = None


def upgrade():
    pass
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_index('ix_emps_id', table_name='emps')
    # op.drop_table('emps')
    # op.drop_index('ix_role_id', table_name='role')
    # op.drop_table('role')
    # op.drop_table('groups')
    # op.drop_table('User')
    # op.drop_index('ix_subgroup_id', table_name='subgroup')
    # op.drop_index('ix_subgroup_name', table_name='subgroup')
    # op.drop_table('subgroup')
    # # ### end Alembic commands ###


def downgrade():
    pass
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_table('subgroup',
    # sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('subgroup_id_seq'::regclass)"), autoincrement=True, nullable=False),
    # sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.Column('created_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.Column('updated_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name='subgroup_group_id_fkey', ondelete='CASCADE'),
    # sa.PrimaryKeyConstraint('id', name='subgroup_pkey'),
    # postgresql_ignore_search_path=False
    # )
    # op.create_index('ix_subgroup_name', 'subgroup', ['name'], unique=False)
    # op.create_index('ix_subgroup_id', 'subgroup', ['id'], unique=False)
    # op.create_table('User',
    # sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    # sa.Column('subgroup_id', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.Column('tenant_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('firstname', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('lastname', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('cell_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('level_twomanager', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('company_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('account_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('country', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('line_manager', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('department', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('job_title', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('created_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.Column('updated_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.ForeignKeyConstraint(['subgroup_id'], ['subgroup.id'], name='User_subgroup_id_fkey', ondelete='CASCADE'),
    # sa.PrimaryKeyConstraint('id', name='User_pkey')
    # )
    # op.create_table('groups',
    # sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    # sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('tenant_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('created_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.Column('updated_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.PrimaryKeyConstraint('id', name='groups_pkey')
    # )
    # op.create_table('role',
    # sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    # sa.Column('tenant_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('created_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.Column('updated_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.PrimaryKeyConstraint('id', name='role_pkey')
    # )
    # op.create_index('ix_role_id', 'role', ['id'], unique=False)
    # op.create_table('emps',
    # sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    # sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('village', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('district', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('father_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('preferred_language', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.PrimaryKeyConstraint('id', name='emps_pkey')
    # )
    # op.create_index('ix_emps_id', 'emps', ['id'], unique=False)
    # # ### end Alembic commands ###
